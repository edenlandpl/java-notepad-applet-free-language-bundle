/*
 */
package notatnik_adi;

import java.awt.Dimension;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.BufferedReader;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.PrintWriter;
import java.util.Locale;
import java.util.ResourceBundle;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author Adrian
 */
public class Ramka extends javax.swing.JFrame {

    /**
     * Creates new form Ramka
     */
    // konstruktor ramki
    public Ramka() {
        initComponents();
        // ustalenie parametrów początkowych ramki
        setTitle("Notatnik ver 0.1");
        setSize(new Dimension(600, 450));
        setLocationRelativeTo(null);
        setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);// wyłączenie defaultowego wyłączania "krzyżykiem"
        
        //Locale locale = new Locale("en", "UK");       //do celów testowych, ustawienie domyślnego języka EN
        Locale locale = Locale.getDefault();
        System.out.println(locale);
        // w zależności od języka systemowego ustawiamy własciwy język aplikacji
 if (locale.getLanguage().equals(new Locale("en").getLanguage()))
        {
            String lang = "en";
            String country = "UK";
            
            Locale l = new Locale(lang, country);
            ResourceBundle r = ResourceBundle.getBundle("Notatnik_adi/Bundle", l);
            
            String str1 = r.getString("Zapisz");
            bottonZapisz.setText(str1);
            String str2 = r.getString("Odczytaj");
            buttonOdczytajNotatki.setText(str2);
            String str3 = r.getString("Język");
            jLabel1.setText(str3);
        }
 else if (locale.getLanguage().equals(new Locale("pl").getLanguage()))
        {
            String lang = "pl";
            String country = "PL";
            
            Locale l = new Locale(lang, country);
            ResourceBundle r = ResourceBundle.getBundle("Notatnik_adi/Bundle", l);
            
            String str1 = r.getString("Zapisz");
            bottonZapisz.setText(str1);
            String str2 = r.getString("Odczytaj");
            buttonOdczytajNotatki.setText(str2);
            String str3 = r.getString("Język");
            jLabel1.setText(str3);
        }
 else if (locale.getLanguage().equals(new Locale("sv").getLanguage()))
        {
            String lang = "sv";
            String country = "SE";
            
            Locale l = new Locale(lang, country);
            ResourceBundle r = ResourceBundle.getBundle("Notatnik_adi/Bundle", l);
            
            String str1 = r.getString("Zapisz");
            bottonZapisz.setText(str1);
            String str2 = r.getString("Odczytaj");
            buttonOdczytajNotatki.setText(str2);
            String str3 = r.getString("Język");
            jLabel1.setText(str3);
        }
 else
      {
            String lang = "en";
            String country = "UK";
            
            Locale l = new Locale(lang, country);
            ResourceBundle r = ResourceBundle.getBundle("Notatnik_adi/Bundle", l);
            
            String str1 = r.getString("Zapisz");
            bottonZapisz.setText(str1);
            String str2 = r.getString("Odczytaj");
            buttonOdczytajNotatki.setText(str2);
            String str3 = r.getString("Język");
            jLabel1.setText(str3);
        }

        // wybór opcji zamknięcia, zabezpieczenie przed przypadkowym zamknięciem
        addWindowListener(new WindowAdapter()
                {
                    public void windowClosing(WindowEvent e)
                    {
                        int value =JOptionPane.showOptionDialog(
                                null,
                                "Czy chcesz zamknąć okno",
                                "Uwaga",
                                JOptionPane.YES_NO_CANCEL_OPTION,
                                JOptionPane.WARNING_MESSAGE,
                                null,
                                new String[] { "Tak",  "Nie" },
                                "Tak"
                                );
                        if(value == JOptionPane.YES_OPTION)
                        {
                            dispose();
                            System.exit(0);
                        }
                                         
                    }


                });
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bottonZapisz = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        textArea = new javax.swing.JTextArea();
        buttonOdczytajNotatki = new javax.swing.JButton();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Notatnik");

        bottonZapisz.setText("Zapisz");
        bottonZapisz.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bottonZapiszActionPerformed(evt);
            }
        });

        textArea.setColumns(20);
        textArea.setRows(5);
        jScrollPane1.setViewportView(textArea);

        buttonOdczytajNotatki.setText("Odczytaj notatki");
        buttonOdczytajNotatki.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonOdczytajNotatkiActionPerformed(evt);
            }
        });

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Polski", "English", "Sweden" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jLabel1.setText("Język");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(bottonZapisz)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buttonOdczytajNotatki)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 57, Short.MAX_VALUE)
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(45, 45, 45))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 245, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bottonZapisz)
                    .addComponent(buttonOdczytajNotatki)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bottonZapiszActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bottonZapiszActionPerformed
        notatki = this.textArea.getText(); // przypisanie do notatki z textarea
        System.out.println(notatki);
        try
        {
            // tworzymy obiekt zapisz, otwarcie strumienia, zapis do pliku, zamknięcie strumienia
            PrintWriter zapisz = new PrintWriter (new FileWriter ("notatnik.txt"),true);
            zapisz.println(notatki);
            zapisz.close();
        }
        catch (Exception e)
        {
            // obsługa wyjątków, własne procedury
        }
    }//GEN-LAST:event_bottonZapiszActionPerformed

    private void buttonOdczytajNotatkiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonOdczytajNotatkiActionPerformed
        try
        {
            // tworzenie strumienia do odczytu z pliku
            BufferedReader odczyt = new BufferedReader(new FileReader("notatnik.txt"));
            String tekst ="";
            // czytaj dopóki nie ma końca pliku
            while ((tekst = odczyt.readLine()) != null)
                    {
                       textArea.setText(tekst); 
                    }
            odczyt.close();
        }
        catch(Exception e)
        {
            
        }
    }//GEN-LAST:event_buttonOdczytajNotatkiActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        String dzialanie = jComboBox1.getSelectedItem().toString();
        
         if (dzialanie.equals ("English"))
        {
            String lang = "en";
            String country = "UK";
            
            Locale l = new Locale(lang, country);
            ResourceBundle r = ResourceBundle.getBundle("Notatnik_adi/Bundle", l);
            
            String str1 = r.getString("Zapisz");
            bottonZapisz.setText(str1);
            String str2 = r.getString("Odczytaj");
            buttonOdczytajNotatki.setText(str2);
            String str3 = r.getString("Język");
            jLabel1.setText(str3);
        }
        if (dzialanie.equals ("Polski"))
        {
            String lang = "pl";
            String country = "PL";
            
            Locale l = new Locale(lang, country);
            ResourceBundle r = ResourceBundle.getBundle("Notatnik_adi/Bundle", l);
            
            String str1 = r.getString("Zapisz");
            bottonZapisz.setText(str1);
            String str2 = r.getString("Odczytaj");
            buttonOdczytajNotatki.setText(str2);
            String str3 = r.getString("Język");
            jLabel1.setText(str3);
        }
         if (dzialanie.equals ("Sweden"))
        {
            String lang = "sv";
            String country = "SE";
            
            Locale l = new Locale(lang, country);
            ResourceBundle r = ResourceBundle.getBundle("Notatnik_adi/Bundle", l);
            
            String str1 = r.getString("Zapisz");
            bottonZapisz.setText(str1);
            String str2 = r.getString("Odczytaj");
            buttonOdczytajNotatki.setText(str2);
            String str3 = r.getString("Język");
            jLabel1.setText(str3);
        }
    }//GEN-LAST:event_jComboBox1ActionPerformed

    /**
     * @param args the command line arguments
     */
    String notatki;
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Ramka.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Ramka.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Ramka.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Ramka.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Ramka().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bottonZapisz;
    private javax.swing.JButton buttonOdczytajNotatki;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea textArea;
    // End of variables declaration//GEN-END:variables
}
